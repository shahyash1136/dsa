import { render, screen, fireEvent } from '@testing-library/react';
import MyComponent from './MyComponent'; // Adjust the import based on your file structure

describe('MyComponent', () => {
  let inputValue;
  let setInputValue;
  let onInputChange;

  beforeEach(() => {
    inputValue = '';
    setInputValue = jest.fn((value) => {
      inputValue = value; // Mock implementation
    });
    onInputChange = jest.fn(); // Mock onInputChange
  });

  it('removes trailing comma on blur', () => {
    inputValue = 'test,'; // Set initial value with trailing comma

    render(
      <MyComponent 
        label="Test Label" 
        inputValue={inputValue} 
        setInputValue={setInputValue} 
        onInputChange={onInputChange} 
        dataTestId="my-input"
      />
    );

    const input = screen.getByTestId('my-input');
    
    // Simulate blur event
    fireEvent.blur(input);
    
    // Check if setInputValue was called with 'test' (trailing comma removed)
    expect(setInputValue).toHaveBeenCalledWith('test');
  });

  it('keeps value unchanged if no trailing comma on blur', () => {
    inputValue = 'test'; // Set initial value without trailing comma

    render(
      <MyComponent 
        label="Test Label" 
        inputValue={inputValue} 
        setInputValue={setInputValue} 
        onInputChange={onInputChange} 
        dataTestId="my-input"
      />
    );

    const input = screen.getByTestId('my-input');
    
    // Simulate blur event
    fireEvent.blur(input);
    
    // Check if setInputValue was called with 'test'
    expect(setInputValue).toHaveBeenCalledWith('test');
  });
});
